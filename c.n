;; C core

(define-macro c-include (file-basename)
  (INTERN (FORMAT NIL "#include \"~a.h\"~%" file-basename)) )

(define-macro typed-name (typed-name)
  (INTERN (FORMAT NIL "~a ~a" (NARLY-EVAL (FIRST typed-name)) (NARLY-EVAL (SECOND typed-name)))) )

(define-macro body (&REST statements)
  (INTERN (FORMAT NIL
                  "{~%  ~a;~%}~%"
                  (STRING-JOIN (MAPCAR #'NARLY-EVAL statements) ";~%  ") )) )

(define-macro defn (typed-name typed-arguments &REST statements)
  `(chunks
    (typed-name ,typed-name)
    ,(INTERN (FORMAT NIL "(~a)" (STRING-JOIN (MAPCAR #'(LAMBDA (typed-argument)
                                                         (NARLY-EVAL `(typed-name ,typed-argument)) )
                                                     typed-arguments )
                                             ", " )))
    (body ,@statements) ) )

(define-macro define-infix-operator (symbol)
  `(define-macro ,symbol (&REST args)
     (INTERN (FORMAT NIL "(~a)" (STRING-JOIN (MAPCAR #'NARLY-EVAL args) (FORMAT NIL "~a" ',symbol)))) ) )

(define-infix-operator +)
(define-infix-operator -)
(define-infix-operator *)
(define-infix-operator /)
(define-infix-operator &&)
(define-infix-operator ||)
(define-infix-operator =)
(define-infix-operator ==)

(define-macro declare-var (typed-var)
  `(typed-name ,typed-var) )

